{"version":3,"sources":["components/Header.tsx","components/CardForTraining.tsx","components/CardsForTraining.tsx","components/CardsForPlay.tsx","components/GameFinishPageSuccess.tsx","components/GameFinishPageErrors.tsx","components/WordsStatistics.tsx","components/Categories.tsx","App.tsx","reducer.tsx","index.tsx"],"names":["Header","props","isModeGameTraining","useSelector","state","dispatch","useDispatch","useState","categories","setCategories","toggleMenu","setToggleMenu","toggleMenuHandler","useCallback","changeModeGameHandler","type","onByClickMenuHandler","map","category","active","window","location","pathname","includes","_id","a","fetch","response","json","data","useEffect","fetchCategories","className","onClick","index","to","name","id","checked","htmlFor","CardForTraining","rotate","setRotate","onClickByCardHandler","event","Audio","card","audioSrc","play","onMouseLeave","style","backgroundImage","image","word","stopPropagation","translation","CardsForTraining","cards","setCards","match","params","fetchCards","CardsForPlay","items","guessed","current","statusGame","setStatusGame","stars","setStars","history","useHistory","url","item","status","sort","Math","random","concat","playWord","JSON","stringify","length","saveCorrectForCard","pop","saveWrongForCard","push","filter","star","GameFinishPageSuccess","setTimeout","src","GameFinishPageErrors","WordsStatistics","statistics","setStatistics","order","field","setSort","fetchWordsStatistics","onClickByHeaderHandler","target","HTMLElement","dataset","onClickByButtonReset","onClickByButtonRepeatDifficultWords","clicks","correct","wrong","perSent","Categories","alt","App","exact","path","component","withRouter","reducer","action","console","log","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAcaA,EAAS,SAACC,GAGnB,IAAMC,EAAqBC,aAAa,SAACC,GAAD,OAA+BA,EAAMF,sBACvEG,EAAWC,cAEjB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAoBC,uBAAY,WAAQF,GAAc,kBAAOD,OAAc,CAACA,IAE5EI,EAAwBD,uBAAY,WACPR,GAAR,IAAvBH,EAAwC,CAACa,KAAM,kBAA8B,CAACA,KAAM,yBACrF,CAACV,EAAUH,IAERc,EAAuB,WACzBR,EAAWS,KAAI,SAACC,GAKZ,OAJAA,EAASC,OAAS,GACfC,OAAOC,SAASC,SAASC,SAASL,EAASM,OAC1CN,EAASC,OAAS,UAEfD,KAEXP,GAAc,GACdF,EAAcD,IAvBe,4CA0BjC,8BAAAiB,EAAA,sEAC2BC,MAAM,oBADjC,cACUC,EADV,gBAEqBA,EAASC,OAF9B,OAGIC,GADIA,EAFR,QAGgBZ,KAAI,SAACC,GAKb,OAJAA,EAASC,OAAS,GACfC,OAAOC,SAASC,SAASC,SAASL,EAASM,OAC1CN,EAASC,OAAS,UAEfD,KAEXT,GAAe,kBAAMoB,KAVzB,4CA1BiC,sBA2CnC,OAJEC,qBAAW,YAvCsB,mCAuCfC,KAAoB,IAKtC,yBAAQC,UAAU,SAAlB,UACI,sBAAKA,UAAU,qBAAf,UACA,qBAAKA,UAAY,qCAAwCtB,EAAa,UAAY,IAAMuB,QAASrB,IACjG,qBAAKoB,UAAY,yBAA4BtB,EAAa,UAAY,IAAOuB,QAAS,kBAAMtB,GAAc,MACtG,oBAAIqB,UAAY,iBAAoBtB,EAAa,UAAY,IAA7D,SACKF,EAAWS,KAAI,SAACC,EAAiCgB,GAC9C,OACI,oBAAIF,UAAS,qBAAb,SACI,cAAC,IAAD,CAAMG,GAAE,0BAAqBjB,EAASM,KAASS,QAASjB,EACpDgB,UAAW,qBAAuBd,EAASC,OAD/C,SAESD,EAASkB,QAHqBF,WAe3D,8BACA,cAAC,IAAD,CAAMC,GAAE,eAAkBH,UAAW,iBAArC,0BAEA,qBAAKA,UAAU,iBAAf,SACA,sBAAKA,UAAU,WAAf,UACI,uBAAOA,UAAU,kBAAkBK,GAAG,WAAWtB,KAAK,WAAWqB,KAAK,WAAWE,UAASpC,IAC1F,uBAAO8B,UAAU,kBAAkBO,QAAQ,WAAWN,QAASnB,a,OC7E9D0B,EAAkB,SAACvC,GAE5B,MAA4BM,oBAAS,GAArC,mBAAOkC,EAAP,KAAeC,EAAf,KAGMC,EAAoB,uCAAG,WAAOC,GAAP,SAAAnB,EAAA,6DACX,IAAIoB,MAAM5C,EAAM6C,KAAKC,UAC7BC,OAFmB,SAInBtB,MAAM,qBAAD,OAAsBzB,EAAM6C,KAAKtB,MAJnB,2CAAH,sDAO5B,OACK,qBAAKQ,UAAY,wBAA2BS,EAAS,iCAAmC,IACnF,sBAAqBxC,EAAM6C,KAAKC,SAAWE,aAAc,kBAAMP,GAAU,IAD9E,SAES,sBAAKV,UAAU,gCAAf,UACI,sBAAKA,UAAU,4BACXkB,MAAO,CAAEC,gBAAgB,QAAD,OAAUlD,EAAM6C,KAAKM,MAArB,OAAkCnB,QAASU,EADvE,UAGI,qBAAKX,UAAU,sBAAf,SAAsC/B,EAAM6C,KAAKO,OACjD,qBAAKrB,UAAU,wBAAwBC,QAAS,SAACW,GAAuBF,GAAU,GAAOE,EAAMU,wBAEnG,qBAAKtB,UAAU,2BAA2BkB,MAAO,CAAEC,gBAAgB,QAAD,OAAUlD,EAAM6C,KAAKM,MAArB,OAAlE,SACI,qBAAKpB,UAAU,sBAAf,SAAsC/B,EAAM6C,KAAKS,sBCtB5DC,EAAmB,SAACvD,GAC7B,MAA0BM,mBAAS,IAAnC,mBAAOkD,EAAP,KAAcC,EAAd,KAD2C,4CAG3C,8BAAAjC,EAAA,sEAC2BC,MAAM,yBAAD,OAA0BzB,EAAM0D,MAAMC,OAAOvB,KAD7E,cACUV,EADV,gBAEuBA,EAASC,OAFhC,OAEUC,EAFV,OAGI6B,GAAU,kBAAM7B,KAHpB,4CAH2C,sBAU7C,OAFEC,qBAAW,YARgC,mCAQvB+B,KAAgB,CAAC5D,EAAM0D,MAAMC,OAAOvB,KAGxD,qBAAKL,UAAU,WAAf,SACKyB,EAAMxC,KAAI,SAAC6B,EAAyBZ,GACjC,OACI,cAAC,EAAD,CAAiBY,KAAMA,GAAWZ,S,QCnBrC4B,EAAe,SAAC7D,GACzB,MAA0BM,mBAAS,CAACwD,MAAO,GAAIC,QAAS,GAAIC,QAAS,KAArE,mBAAOR,EAAP,KAAcC,EAAd,KACA,EAAoCnD,oBAAS,GAA7C,mBAAO2D,EAAP,KAAmBC,EAAnB,KACA,EAA0B5D,mBAAmB,IAA7C,mBAAO6D,EAAP,KAAcC,EAAd,KACIC,EAAUC,cAJyB,4CAMvC,gCAAA9C,EAAA,6DAEU+C,EAAMvE,EAAM0D,MAAMC,OAAOvB,GAAnB,gCAAiDpC,EAAM0D,MAAMC,OAAOvB,IAApE,wDAFhB,SAG2BX,MAAM8C,GAHjC,cAGU7C,EAHV,gBAIuBA,EAASC,OAJhC,OAIUC,EAJV,OAMIsC,GAAc,GACdE,EAAS,IAETX,EAAS,CACLK,MAAOlC,EAAKZ,KAAI,SAACwD,GAA+C,OAAlBA,EAAKC,OAAS,GAAWD,KAAQE,MAAK,kBAAOC,KAAKC,SAAW,GAAM,GAAK,KACtHb,QAAS,GAAGc,OAAOjD,GAAM8C,MAAK,kBAAOC,KAAKC,SAAW,GAAM,GAAK,KAChEZ,QAAS,KAZjB,6CANuC,kEAuBvC,WAAgCnB,GAAhC,SAAArB,EAAA,sEACUC,MAAM,oBAAD,OAAqBoB,EAAKtB,MADzC,4CAvBuC,kEA0BvC,WAAkCsB,GAAlC,SAAArB,EAAA,sEACUC,MAAM,sBAAD,OAAuBoB,EAAKtB,MAD3C,4CA1BuC,sBA8BvCM,qBAAW,YA9B4B,mCA8BpB+B,KAAgB,CAAC5D,EAAM0D,MAAMC,OAAOvB,KACnD,IAAM0C,EAAW,SAACjC,GACJ,IAAID,MAAMC,EAAKC,UACvBC,QAiBJL,EAAuB,SAACG,GAEvBkC,KAAKC,UAAUnC,KAAWkC,KAAKC,UAAUxB,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,KApD9C,oCAqD/BC,CAAmB1B,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,IACxDzB,EAAMM,MAAM9C,KAAI,SAACwD,GAIb,OAHGO,KAAKC,UAAUnC,KAAUkC,KAAKC,UAAUR,KACvC3B,EAAK4B,OAAS,WAEX5B,KAGXW,EAAMO,QAAQoB,MAEX3B,EAAMO,QAAQkB,SACC,IAAIrC,MAAJ,sBACRG,OAEN+B,EAAStB,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,IAC9Cb,EAAS,YAAID,GAAOU,OAAO,CAAC,iBApED,oCAwE/BO,CAAiB5B,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,IACxC,IAAIrC,MAAJ,oBACRG,OAENqB,EAAS,YAAID,GAAOU,OAAO,CAAC,aAG5BrB,EAAMO,QAAQkB,QAAUhB,IACxBE,EAAMc,SACNzB,EAAMM,MAAMmB,OAAS,EACjBZ,EAAQgB,KAAK,YACbhB,EAAQgB,KAAR,kBAAwBlB,EAAMmB,QAAO,SAACC,GAAD,MAAmB,UAATA,KAAkBN,WAO1E,OACK,sBAAKlD,UAAWkC,EAAa,eAAiB,OAA9C,UACI,sBAAKlC,UAAU,kBAAf,UACMyB,EAAMM,MAAMmB,OAAuD,GAA7C,qBAAKlD,UAAU,SAAf,0BACvByB,EAAMM,MAAM9C,KAAI,SAAC6B,EAAyBZ,GACvC,OACI,qBAAMF,UAAW,cAAgBc,EAAK4B,OAAoBzC,QAAS,kBAAMU,EAAqBG,IAClG,iBAAgBA,EAAKO,KAAMH,MAAO,CAAEC,gBAAgB,QAAD,OAAUL,EAAKM,MAAf,QADIlB,SAK/D,qBAAKF,UAAU,cAAf,SACKoC,EAAMnD,KAAI,SAACuE,EAAMtD,GACd,OAAS,qBAAKF,UAAS,iCAA4BwD,IAAatD,QAGvEgC,GAAc,mBAAGlC,UAAU,oBAAoBC,QA9D7B,WAC3B,GAAGwB,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,GAAG,CACvC,IAAOpC,EAA0BW,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,GACtEH,EAASjC,OA4DHW,EAAMM,MAAMmB,SAAWhB,EAAc,mBAAGlC,UAAU,qBAAqBC,QAvE5D,WAErB,GADAkC,GAAc,GACXV,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,GAAG,CACvC,IAAOpC,EAA0BW,EAAMO,QAAQP,EAAMO,QAAQkB,OAAS,GACtEH,EAASjC,KAmEkC,wBAA8E,OC3GxH2C,EAAwB,WAChBnF,cAAjB,IACMgE,EAAUC,cAUhB,OARAzC,qBAAW,WACP4D,YAAW,WAAQpB,EAAQgB,KAAK,OAAO,MAEzB,IAAIzC,MAAM,sBAClBG,UAKN,qBAAKhB,UAAU,OAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,iBAAiB2D,IAAI,kCCfvCC,EAAuB,SAAC3F,GAChBK,cAAjB,IACMgE,EAAUC,cAQhB,OANAzC,qBAAW,WACO,IAAIe,MAAM,sBAClBG,OACN0C,YAAW,WAAQpB,EAAQgB,KAAK,OAAO,QAIvC,qBAAKtD,UAAU,OAAf,SACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,gBAAf,qBAAwC/B,EAAM0D,MAAMC,OAAOvB,MAC3D,qBAAKL,UAAU,iBAAiB2D,IAAI,8BCdvCE,EAAkB,WAC3B,MAAoCtF,mBAAS,IAA7C,mBAAOuF,EAAP,KAAmBC,EAAnB,KACA,EAAwBxF,mBAAS,CAACyF,MAAO,OAAQC,MAAO,YAAxD,mBAAOtB,EAAP,KAAauB,EAAb,KACM7F,EAAWC,cACXgE,EAAUC,cAJiB,4CAMjC,8BAAA9C,EAAA,sEAC2BC,MAAM,+BAAD,OAAgCiD,EAAKsB,MAArC,kBAAoDtB,EAAKqB,QADzF,cACUrE,EADV,gBAEuBA,EAASC,OAFhC,OAEUC,EAFV,OAGIkE,EAAclE,GAHlB,4CANiC,sBAWjCC,qBAAW,YAXsB,mCAWdqE,KAA0B,CAACxB,IAE9C,IAAMyB,EAAyB,SAACxD,GACzBA,EAAMyD,kBAAkBC,aACpB1D,EAAMyD,OAAOE,QAAQN,OACpBC,EAAQ,CAACF,MAAsB,SAAfrB,EAAKqB,MAAmB,MAAQ,OAAQC,MAAOrD,EAAMyD,OAAOE,QAAQN,SAK1FO,EAAoB,uCAAG,WAAO5D,GAAP,iBAAAnB,EAAA,sEAEFC,MAAM,qCAAD,OAAsCiD,EAAKsB,MAA3C,kBAA0DtB,EAAKqB,QAFlE,cAEnBrE,EAFmB,gBAGNA,EAASC,OAHH,OAGnBC,EAHmB,OAIzBkE,EAAclE,GAJW,2CAAH,sDAMpB4E,EAAmC,uCAAG,WAAO7D,GAAP,SAAAnB,EAAA,sDACxCpB,EAAS,CAACU,KAAM,mBAChBuD,EAAQgB,KAAK,+BAF2B,2CAAH,sDAKzC,OACI,qBAAKtD,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,wBAAQA,UAAU,oBAAoBC,QAASwE,EAA/C,oCACA,wBAAQzE,UAAU,oBAAoBC,QAASuE,EAA/C,sBAGJ,qBAAKxE,UAAU,6BAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,qBAAIA,UAAU,aAAd,UACI,oBAAIA,UAAU,4CAA4C,aAAW,OAAOC,QAASmE,EAArF,kBACA,oBAAIpE,UAAU,4CAA4C,aAAW,cAAcC,QAASmE,EAA5F,yBACA,oBAAIpE,UAAU,4CAA4C,aAAW,WAAWC,QAASmE,EAAzF,sBACA,oBAAIpE,UAAU,4CAA4C,aAAW,SAASC,QAASmE,EAAvF,oBACA,oBAAIpE,UAAU,4CAA4C,aAAW,UAAUC,QAASmE,EAAxF,qBACA,oBAAIpE,UAAU,4CAA4C,aAAW,QAAQC,QAASmE,EAAtF,mBACA,oBAAIpE,UAAU,4CAA4C,aAAW,UAAUC,QAASmE,EAAxF,uBAEHN,EAAW7E,KAAK,SAAC6B,EAAyBZ,GAEvC,OACI,qBAAIF,UAAU,aAAd,UACI,oBAAIA,UAAU,YAAd,SAA2Bc,EAAKO,OAChC,oBAAIrB,UAAU,YAAd,SAA2Bc,EAAKS,cAChC,oBAAIvB,UAAU,YAAd,SAA2Bc,EAAK5B,WAChC,oBAAIc,UAAU,YAAd,SAA2Bc,EAAK4D,SAChC,oBAAI1E,UAAU,YAAd,SAA2Bc,EAAK6D,UAChC,oBAAI3E,UAAU,YAAd,SAA2Bc,EAAK8D,QAChC,qBAAI5E,UAAU,YAAd,UAA2Bc,EAAK+D,QAAhC,SAP4B3E,iBCvDnD4E,EAAa,WACtB,MAAoCvG,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAD4B,4CAG5B,8BAAAgB,EAAA,sEAC2BC,MAAM,mBADjC,cACUC,EADV,gBAEuBA,EAASC,OAFhC,OAEUC,EAFV,OAGIpB,EAAcoB,GAHlB,4CAH4B,sBAW5B,OAHAC,qBAAW,YARiB,mCAQTqE,KAA0B,IAGrC,qBAAKnE,UAAU,aAAf,SACI,qBAAKA,UAAU,wBAAf,SACKxB,EAAWS,KAAI,SAACC,GACb,OACI,eAAC,IAAD,CAAMiB,GAAE,0BAAqBjB,EAASM,KAAOQ,UAAU,mBAAvD,UACI,qBAAK2D,IAAKzE,EAASkC,MAAOpB,UAAU,sBAAsB+E,IAAK7F,EAASkB,OACxE,qBAAKJ,UAAU,oBAAf,SAAoCd,EAASkB,kBCqB9D4E,MAtBf,WAEE,IAAM9G,EAAqBC,aAAa,SAACC,GAAD,OAA+BA,EAAMF,sBAC7E,OACE,qBAAK8B,UAAU,YAAf,SACM,eAAC,IAAD,WACI,cAAC,EAAD,IACE,eAAC,IAAD,WACG9B,GAAsB,cAAC,IAAD,CAAO+G,OAAK,EAAEC,KAAI,sBAAyBC,UAAWC,YAAW5D,MACtFtD,GAAsB,cAAC,IAAD,CAAO+G,OAAK,EAAEC,KAAI,sBAAyBC,UAAWC,YAAWtD,KACzF,cAAC,IAAD,CAAOmD,OAAK,EAAEC,KAAI,WAAcC,UAAWC,YAAW3B,KACtD,cAAC,IAAD,CAAOwB,OAAK,EAAEC,KAAI,cAAiBC,UAAWC,YAAWxB,KACzD,cAAC,IAAD,CAAOqB,OAAK,EAAEC,KAAI,cAAiBC,UAAWC,YAAWvB,MACvD3F,GAAsB,cAAC,IAAD,CAAO+G,OAAK,EAAEC,KAAI,8BAAiCC,UAAWC,YAAWtD,KACjG,cAAC,IAAD,CAAOmD,OAAK,EAAEC,KAAI,IAAOC,UAAWC,YAAWN,c,QCjBlDO,MAhBf,WAAkE,IAAjDjH,EAAgD,uDAAxC,CAACF,oBAAoB,GAAOoH,EAAY,uCAE7D,OADAC,QAAQC,IAAIF,GACJA,EAAOvG,MACX,IAAK,qBACD,MAAO,CACHb,oBAAoB,GAE5B,IAAK,iBACD,MAAO,CACHA,oBAAoB,GAE5B,QACA,OAAOE,ICLTqH,EAAQC,YAAYL,GAE1BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACK,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACG,cAAC,EAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.425fd7e6.chunk.js","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport { Link , RouteChildrenProps, useRouteMatch, useHistory, useParams} from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CardTypeInterface } from '../typing';\r\n\r\ntype CategoryTypeInterface = {\r\n    _id: string,\r\n    name: string,\r\n    active: string,\r\n}\r\ntype StoreTypeInterface = {\r\n    isModeGameTraining: boolean,\r\n}\r\n\r\nexport const Header = (props: any) =>{\r\n   \r\n    \r\n    const isModeGameTraining = useSelector( (state: StoreTypeInterface) => state.isModeGameTraining);\r\n    const dispatch = useDispatch();\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [toggleMenu, setToggleMenu] = useState(false);\r\n    const toggleMenuHandler = useCallback(() => { setToggleMenu(() => !toggleMenu)}, [toggleMenu]);\r\n    \r\n    const changeModeGameHandler = useCallback(() => {\r\n        isModeGameTraining === true ?  dispatch({type: 'game.mode.play'}) : dispatch({type: 'game.mode.training'})\r\n    }, [dispatch, isModeGameTraining])\r\n\r\n    const onByClickMenuHandler = () => {\r\n        categories.map((category: CategoryTypeInterface) => {\r\n            category.active = ''\r\n            if(window.location.pathname.includes(category._id)){\r\n                category.active = 'active';\r\n            }\r\n            return category;\r\n        });\r\n        setToggleMenu(false);\r\n        setCategories(categories);\r\n    }\r\n\r\n    async function fetchCategories (){\r\n        const response = await fetch(\"/api/categories/\");\r\n        let data = await response.json();\r\n        data = data.map((category: CategoryTypeInterface) => {\r\n            category.active = ''\r\n            if(window.location.pathname.includes(category._id)){\r\n                category.active = 'active';\r\n            }\r\n            return category;\r\n        })\r\n        setCategories( () => data);\r\n    }\r\n\r\n    useEffect( () => {fetchCategories()}, []);\r\n    \r\n    \r\n    \r\n  return (\r\n    <header className=\"header\">\r\n        <div className=\"header__navigation\">\r\n        <div className={ 'header__navigation-button-toggle ' +  (toggleMenu ? \"active \" : \"\") } onClick={toggleMenuHandler}></div> \r\n        <div className={ 'header__menu-wrapper ' +  (toggleMenu ? \"active \" : \"\") }  onClick={() => setToggleMenu(false)}></div>\r\n            <ul className={ 'header__menu ' +  (toggleMenu ? \"active \" : \"\") }> \r\n                {categories.map((category: CategoryTypeInterface, index) => {\r\n                    return (\r\n                        <li className={`header__menu-item `}  key={index}> \r\n                            <Link to={`/category/words/${category._id}` }  onClick={onByClickMenuHandler}\r\n                                className={'header__menu-link ' + category.active}>\r\n                                    {category.name}\r\n                                </Link>\r\n                        </li>\r\n                    )\r\n                    \r\n                })}\r\n            </ul>\r\n        \r\n       \r\n\r\n           \r\n        </div>\r\n        <div>\r\n        <Link to={`/statistics/`} className={'header__button'}>Statistics</Link>\r\n        </div>\r\n        <div className=\"header__switch\">\r\n        <div className=\"switcher\">\r\n            <input className=\"switcher__input\" id=\"switcher\" type=\"checkbox\" name=\"switcher\" checked={isModeGameTraining ? true : false} />\r\n            <label className=\"switcher__label\" htmlFor=\"switcher\" onClick={changeModeGameHandler} ></label>\r\n        </div>\r\n        </div>\r\n    </header>\r\n  )\r\n}","import React, {MouseEvent , useState} from 'react'\r\n\r\ntype CardTypeInterface = {\r\n    _id: string\r\n    audioSrc: string,\r\n    word: string,\r\n    image: string,\r\n    translation: string,\r\n}\r\nexport const CardForTraining = (props:{ card: CardTypeInterface}) => {\r\n\r\n    const [rotate, setRotate] = useState(false);\r\n  \r\n\r\n    const onClickByCardHandler = async (event: MouseEvent ) => {\r\n        const audio = new Audio(props.card.audioSrc)\r\n        audio.play();\r\n\r\n        await fetch(`/api/words/clicks/${props.card._id}`);\r\n    }\r\n    \r\n  return ( \r\n       <div className={ 'training__flip-card ' +  (rotate ? \"training__flip-card-translate \" : \"\")}  \r\n            data-card-audio-src={props.card.audioSrc}  onMouseLeave={() => setRotate(false)}>\r\n                <div className=\"training__flip-card-container\">\r\n                    <div className=\"training__flip-card-front\" \r\n                        style={{ backgroundImage: `url(\"${props.card.image}\")` }} onClick={onClickByCardHandler}>\r\n\r\n                        <div className=\"training__card-text\">{props.card.word}</div>\r\n                        <div className=\"training__card-rotate\" onClick={(event: MouseEvent) =>{ setRotate(true); event.stopPropagation(); }}></div>\r\n                    </div>\r\n                    <div className=\"training__flip-card-back\" style={{ backgroundImage: `url(\"${props.card.image}\")` }}>\r\n                        <div className=\"training__card-text\">{props.card.translation}</div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n  )\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport { CardForTraining } from './CardForTraining'\r\n\r\ntype CardTypeInterface = {\r\n    _id: string,\r\n    audioSrc: string,\r\n    word: string,\r\n    image: string,\r\n    translation: string,\r\n}\r\nexport const CardsForTraining = (props:any) => {\r\n    const [cards, setCards] = useState([])\r\n    \r\n    async function fetchCards (){\r\n        const response = await fetch(`/api/categories/words/${props.match.params.id}`);\r\n        const data = await response.json();\r\n        setCards( () => data);\r\n    }\r\n    useEffect( () => {  fetchCards() }, [props.match.params.id]);\r\n\r\n  return ( \r\n    <div className=\"training\"> \r\n        {cards.map((card: CardTypeInterface, index) => {\r\n            return (    \r\n                <CardForTraining card={card} key={index}/>\r\n            )\r\n        })}\r\n    </div>\r\n  )\r\n}","import React, {useCallback, useContext, useEffect, useState, MouseEvent} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {CardTypeInterface} from '../typing'\r\n\r\n\r\nexport const CardsForPlay = (props:any) => {\r\n    const [cards, setCards] = useState({items: [], guessed: [], current: {}});\r\n    const [statusGame, setStatusGame] = useState(false);\r\n    const [stars, setStars] = useState<string[]>([]);\r\n    let history = useHistory();\r\n\r\n    async function fetchCards (){\r\n       \r\n        const url = props.match.params.id ? `/api/categories/words/${props.match.params.id}` : `/api/words/statistics?field=perSent&order=desc&game=y`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n\r\n        setStatusGame(false);\r\n        setStars([]);\r\n\r\n        setCards({\r\n            items: data.map((item: CardTypeInterface) => {item.status = ''; return item} ).sort(() => (Math.random() > .5) ? 1 : -1),\r\n            guessed: [].concat(data).sort(() => (Math.random() > .5) ? 1 : -1), \r\n            current: {}}\r\n        );\r\n\r\n        \r\n    }\r\n    async function saveWrongForCard(card: CardTypeInterface) {\r\n        await fetch(`/api/words/wrong/${card._id}`);\r\n    }\r\n    async function saveCorrectForCard(card: CardTypeInterface) {\r\n        await fetch(`/api/words/correct/${card._id}`);\r\n    }\r\n\r\n    useEffect( () => { fetchCards() }, [props.match.params.id]);\r\n        const playWord = (card: CardTypeInterface) => {\r\n        const audio = new Audio(card.audioSrc);\r\n        audio.play();\r\n    }\r\n\r\n    const startGameHandler = () => { \r\n        setStatusGame(true);\r\n        if(cards.guessed[cards.guessed.length - 1]){\r\n            const  card: CardTypeInterface = cards.guessed[cards.guessed.length - 1];\r\n            playWord(card);\r\n        }\r\n        \r\n    }\r\n    const onClickByRepeatHandler = () => {\r\n        if(cards.guessed[cards.guessed.length - 1]){\r\n            const  card: CardTypeInterface = cards.guessed[cards.guessed.length - 1];\r\n            playWord(card);\r\n        }\r\n    }\r\n    const onClickByCardHandler = (card: CardTypeInterface) =>{\r\n\r\n        if(JSON.stringify(card)  === JSON.stringify(cards.guessed[cards.guessed.length - 1])){\r\n            saveCorrectForCard(cards.guessed[cards.guessed.length - 1]);\r\n            cards.items.map((item: CardTypeInterface) => {\r\n                if(JSON.stringify(card) === JSON.stringify(item)){\r\n                    card.status = 'success';\r\n                }\r\n                return card;\r\n            })\r\n\r\n            cards.guessed.pop();\r\n\r\n            if(cards.guessed.length){\r\n                const audio = new Audio(`/audio/correct.mp3`);\r\n                audio.play();\r\n\r\n                playWord(cards.guessed[cards.guessed.length - 1]);\r\n                setStars([...stars].concat(['success']))\r\n            }\r\n            \r\n        }else{\r\n            saveWrongForCard(cards.guessed[cards.guessed.length - 1])\r\n            const audio = new Audio(`/audio/error.mp3`);\r\n            audio.play();\r\n\r\n            setStars([...stars].concat(['error']))\r\n        }\r\n\r\n        if(!cards.guessed.length && statusGame){\r\n            stars.length === \r\n            cards.items.length - 1 ? \r\n                history.push('/success') :\r\n                history.push(`/errors/${stars.filter((star) => star === 'error').length}`);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n  \r\n       return ( \r\n            <div className={statusGame ? 'game started' : 'game' }> \r\n                <div className=\"game__container\">\r\n                    {!cards.items.length  ? <div className=\"loader\">LOADIND.....</div> : ''}\r\n                    {cards.items.map((card: CardTypeInterface, index) => {\r\n                        return (    \r\n                            <div  className={\"game__card \" + card.status} key={index} onClick={() => onClickByCardHandler(card)}\r\n                        data-card-word={card.word} style={{ backgroundImage: `url(\"${card.image}\")`}} ></div>  \r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"game__stars\">\r\n                    {stars.map((star, index) => {\r\n                        return ( <div className={`game__star game__star--${star}`} key={index}></div>)\r\n                    })}\r\n                </div>\r\n                {statusGame && <a className=\"game__button-paly\" onClick={onClickByRepeatHandler}></a>}\r\n                {(cards.items.length && !statusGame) ? <a className=\"game__button-start\" onClick={startGameHandler}>start game</a> : ''}\r\n            </div>\r\n        )\r\n\r\n\r\n  \r\n}","\r\nimport React, {useCallback, useContext, useEffect, useState, MouseEvent} from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const GameFinishPageSuccess = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    useEffect( () => {\r\n        setTimeout(() => { history.push('/')}, 1500);\r\n\r\n        const audio = new Audio('/audio/success.mp3');\r\n        audio.play();\r\n\r\n    });\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"final\">\r\n                <img className=\"final__picture\" src=\"/img/congrats-minion.png\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","\r\nimport React, {useCallback, useContext, useEffect, useState, MouseEvent} from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const GameFinishPageErrors = (props: any) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n\r\n    useEffect( () => {\r\n        const audio = new Audio('/audio/failure.mp3');\r\n        audio.play();\r\n        setTimeout(() => { history.push('/')}, 2000);\r\n    }); \r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"final\">\r\n                <div className=\"final__errors\">ERRORS: {props.match.params.id}</div>\r\n                <img className=\"final__picture\" src=\"/img/sad_minion.png\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useEffect , useState, MouseEvent} from 'react'\r\nimport {CardTypeInterface} from '../typing';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const WordsStatistics = () => {\r\n    const [statistics, setStatistics] = useState([]);\r\n    const [sort, setSort] = useState({order: 'desc', field: 'perSent'});\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n \r\n    async function fetchWordsStatistics(){\r\n        const response = await fetch(`/api/words/statistics?field=${sort.field}&order=${sort.order}`);\r\n        const data = await response.json();\r\n        setStatistics(data);   \r\n    }\r\n    useEffect( () => { fetchWordsStatistics() }, [sort]);\r\n\r\n    const onClickByHeaderHandler = (event: MouseEvent) => {\r\n        if(event.target instanceof HTMLElement){\r\n            if(event.target.dataset.field){\r\n                setSort({order: sort.order === 'desc' ? 'asc' : 'desc', field: event.target.dataset.field})\r\n            }\r\n        }\r\n       \r\n    }\r\n    const onClickByButtonReset = async (event: MouseEvent) => {\r\n       \r\n        const response = await fetch(`/api/words/statistics/reset?field=${sort.field}&order=${sort.order}`);\r\n        const data = await response.json();\r\n        setStatistics(data);\r\n    }\r\n    const onClickByButtonRepeatDifficultWords = async (event: MouseEvent) => {\r\n        dispatch({type: 'game.mode.play'});\r\n        history.push('/statistics/difficult-words')\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"statistic\">\r\n                <div className=\"statistic__controls\">\r\n                    <button className=\"statistic__button\" onClick={onClickByButtonRepeatDifficultWords}>Repeat difficult words</button>\r\n                    <button className=\"statistic__button\" onClick={onClickByButtonReset}>Reset</button>\r\n\r\n                </div>\r\n                <div className=\"statistic__table-container\">\r\n                    <table className=\"table\">\r\n                        <tr className=\"table__row\">\r\n                            <td className=\"table__header table__td table__td--header\" data-field=\"word\" onClick={onClickByHeaderHandler}>Word</td>\r\n                            <td className=\"table__header table__td table__td--header\" data-field=\"translation\" onClick={onClickByHeaderHandler}>Translation</td>\r\n                            <td className=\"table__header table__td table__td--header\" data-field=\"category\" onClick={onClickByHeaderHandler}>Category</td>\r\n                            <td className=\"table__header table__td table__td--header\" data-field=\"clicks\" onClick={onClickByHeaderHandler}>Clicks</td>\r\n                            <td className=\"table__header table__td table__td--header\" data-field=\"correct\" onClick={onClickByHeaderHandler}>Correct</td>\r\n                            <td className=\"table__header table__td table__td--header\" data-field=\"wrong\" onClick={onClickByHeaderHandler}>Wrong</td>\r\n                            <td className=\"table__header table__td table__td--header\" data-field=\"perSent\" onClick={onClickByHeaderHandler}>Errors</td>\r\n                        </tr>\r\n                        {statistics.map( (card: CardTypeInterface, index) => {\r\n                             \r\n                            return (\r\n                                <tr className=\"table__row\" key={index}>\r\n                                    <td className=\"table__td\">{card.word}</td>\r\n                                    <td className=\"table__td\">{card.translation}</td>\r\n                                    <td className=\"table__td\">{card.category}</td>\r\n                                    <td className=\"table__td\">{card.clicks}</td>\r\n                                    <td className=\"table__td\">{card.correct}</td>\r\n                                    <td className=\"table__td\">{card.wrong}</td>\r\n                                    <td className=\"table__td\">{card.perSent}%</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, {useEffect , useState, MouseEvent} from 'react'\r\nimport {CategoryTypeInterface} from '../typing';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Categories = () => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    async function fetchWordsStatistics(){\r\n        const response = await fetch(`/api/categories`);\r\n        const data = await response.json();\r\n        setCategories(data);   \r\n    }\r\n    useEffect( () => { fetchWordsStatistics() }, []);\r\n\r\n\r\n    return (<div className=\"categories\">\r\n                <div className=\"categories__container\">\r\n                    {categories.map((category: CategoryTypeInterface) => {\r\n                        return (\r\n                            <Link to={`/category/words/${category._id}`} className=\"categories__item\" >\r\n                                <img src={category.image} className=\"categories__picture\" alt={category.name}/>\r\n                                <div className=\"categories__title\">{category.name}</div>  \r\n                            </Link> \r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>)\r\n        \r\n}","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport { Header } from './components/Header';\r\nimport { BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\";\r\nimport { CardsForTraining } from './components/CardsForTraining';\r\nimport { CardsForPlay } from './components/CardsForPlay';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GameFinishPageSuccess } from './components/GameFinishPageSuccess';\r\nimport { GameFinishPageErrors } from './components/GameFinishPageErrors';\r\nimport { WordsStatistics } from './components/WordsStatistics';\r\nimport { Categories } from './components/Categories';\r\n\r\n\r\ntype StoreTypeInterface = {\r\n  isModeGameTraining: boolean,\r\n}\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const isModeGameTraining = useSelector( (state: StoreTypeInterface) => state.isModeGameTraining);\r\n  return (\r\n    <div className=\"container\">\r\n          <Router>\r\n              <Header/> \r\n                <Switch>\r\n                  {isModeGameTraining && <Route exact  path={`/category/words/:id`} component={withRouter(CardsForTraining)}/>}\r\n                  {!isModeGameTraining && <Route exact  path={`/category/words/:id`} component={withRouter(CardsForPlay)}/>}\r\n                  <Route exact  path={`/success`} component={withRouter(GameFinishPageSuccess)}/>\r\n                  <Route exact  path={`/errors/:id`} component={withRouter(GameFinishPageErrors)}/>\r\n                  <Route exact  path={`/statistics`} component={withRouter(WordsStatistics)}/>\r\n                  {!isModeGameTraining && <Route exact  path={`/statistics/difficult-words`} component={withRouter(CardsForPlay)}/>}\r\n                  <Route exact  path={`/`} component={withRouter(Categories)}/>\r\n                </Switch>\r\n          </Router>    \r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n"," \r\nfunction reducer(state = {isModeGameTraining: true}, action: any){\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case \"game.mode.training\":\r\n            return {\r\n                isModeGameTraining: true\r\n            };\r\n        case \"game.mode.play\":\r\n            return {\r\n                isModeGameTraining: false\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n    }\r\n \r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n       <Provider store={store}>\n          <App />\n       </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}